#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLDD
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanlyDD")]
	public partial class ConnectDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChuyenMon(ChuyenMon instance);
    partial void UpdateChuyenMon(ChuyenMon instance);
    partial void DeleteChuyenMon(ChuyenMon instance);
    partial void InsertKhoadaotao(Khoadaotao instance);
    partial void UpdateKhoadaotao(Khoadaotao instance);
    partial void DeleteKhoadaotao(Khoadaotao instance);
    partial void InsertNganhHoc(NganhHoc instance);
    partial void UpdateNganhHoc(NganhHoc instance);
    partial void DeleteNganhHoc(NganhHoc instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertDiemDanh(DiemDanh instance);
    partial void UpdateDiemDanh(DiemDanh instance);
    partial void DeleteDiemDanh(DiemDanh instance);
    partial void InsertDangkyhoc(Dangkyhoc instance);
    partial void UpdateDangkyhoc(Dangkyhoc instance);
    partial void DeleteDangkyhoc(Dangkyhoc instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    #endregion
		
		public ConnectDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanlyDDConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConnectDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChuyenMon> ChuyenMons
		{
			get
			{
				return this.GetTable<ChuyenMon>();
			}
		}
		
		public System.Data.Linq.Table<Khoadaotao> Khoadaotaos
		{
			get
			{
				return this.GetTable<Khoadaotao>();
			}
		}
		
		public System.Data.Linq.Table<NganhHoc> NganhHocs
		{
			get
			{
				return this.GetTable<NganhHoc>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<DiemDanh> DiemDanhs
		{
			get
			{
				return this.GetTable<DiemDanh>();
			}
		}
		
		public System.Data.Linq.Table<Dangkyhoc> Dangkyhocs
		{
			get
			{
				return this.GetTable<Dangkyhoc>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuyenMon")]
	public partial class ChuyenMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCM;
		
		private string _TenCM;
		
		private string _MaNganh;
		
		private string _MoTa;
		
		private EntitySet<GiangVien> _GiangViens;
		
		private EntityRef<NganhHoc> _NganhHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCMChanging(string value);
    partial void OnMaCMChanged();
    partial void OnTenCMChanging(string value);
    partial void OnTenCMChanged();
    partial void OnMaNganhChanging(string value);
    partial void OnMaNganhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public ChuyenMon()
		{
			this._GiangViens = new EntitySet<GiangVien>(new Action<GiangVien>(this.attach_GiangViens), new Action<GiangVien>(this.detach_GiangViens));
			this._NganhHoc = default(EntityRef<NganhHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCM", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCM
		{
			get
			{
				return this._MaCM;
			}
			set
			{
				if ((this._MaCM != value))
				{
					this.OnMaCMChanging(value);
					this.SendPropertyChanging();
					this._MaCM = value;
					this.SendPropertyChanged("MaCM");
					this.OnMaCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCM", DbType="NVarChar(50)")]
		public string TenCM
		{
			get
			{
				return this._TenCM;
			}
			set
			{
				if ((this._TenCM != value))
				{
					this.OnTenCMChanging(value);
					this.SendPropertyChanging();
					this._TenCM = value;
					this.SendPropertyChanged("TenCM");
					this.OnTenCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="NChar(10)")]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					if (this._NganhHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenMon_GiangVien", Storage="_GiangViens", ThisKey="MaCM", OtherKey="MaCM")]
		public EntitySet<GiangVien> GiangViens
		{
			get
			{
				return this._GiangViens;
			}
			set
			{
				this._GiangViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganhHoc_ChuyenMon", Storage="_NganhHoc", ThisKey="MaNganh", OtherKey="MaNganh", IsForeignKey=true)]
		public NganhHoc NganhHoc
		{
			get
			{
				return this._NganhHoc.Entity;
			}
			set
			{
				NganhHoc previousValue = this._NganhHoc.Entity;
				if (((previousValue != value) 
							|| (this._NganhHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NganhHoc.Entity = null;
						previousValue.ChuyenMons.Remove(this);
					}
					this._NganhHoc.Entity = value;
					if ((value != null))
					{
						value.ChuyenMons.Add(this);
						this._MaNganh = value.MaNganh;
					}
					else
					{
						this._MaNganh = default(string);
					}
					this.SendPropertyChanged("NganhHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenMon = this;
		}
		
		private void detach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuyenMon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoadaotao")]
	public partial class Khoadaotao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private string _MoTa;
		
		private EntitySet<NganhHoc> _NganhHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public Khoadaotao()
		{
			this._NganhHocs = new EntitySet<NganhHoc>(new Action<NganhHoc>(this.attach_NganhHocs), new Action<NganhHoc>(this.detach_NganhHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoadaotao_NganhHoc", Storage="_NganhHocs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<NganhHoc> NganhHocs
		{
			get
			{
				return this._NganhHocs;
			}
			set
			{
				this._NganhHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NganhHocs(NganhHoc entity)
		{
			this.SendPropertyChanging();
			entity.Khoadaotao = this;
		}
		
		private void detach_NganhHocs(NganhHoc entity)
		{
			this.SendPropertyChanging();
			entity.Khoadaotao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NganhHoc")]
	public partial class NganhHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNganh;
		
		private string _TenNganh;
		
		private string _MoTa;
		
		private string _MaKhoa;
		
		private EntitySet<ChuyenMon> _ChuyenMons;
		
		private EntityRef<Khoadaotao> _Khoadaotao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNganhChanging(string value);
    partial void OnMaNganhChanged();
    partial void OnTenNganhChanging(string value);
    partial void OnTenNganhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public NganhHoc()
		{
			this._ChuyenMons = new EntitySet<ChuyenMon>(new Action<ChuyenMon>(this.attach_ChuyenMons), new Action<ChuyenMon>(this.detach_ChuyenMons));
			this._Khoadaotao = default(EntityRef<Khoadaotao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNganh", DbType="NVarChar(50)")]
		public string TenNganh
		{
			get
			{
				return this._TenNganh;
			}
			set
			{
				if ((this._TenNganh != value))
				{
					this.OnTenNganhChanging(value);
					this.SendPropertyChanging();
					this._TenNganh = value;
					this.SendPropertyChanged("TenNganh");
					this.OnTenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NChar(10)")]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoadaotao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NganhHoc_ChuyenMon", Storage="_ChuyenMons", ThisKey="MaNganh", OtherKey="MaNganh")]
		public EntitySet<ChuyenMon> ChuyenMons
		{
			get
			{
				return this._ChuyenMons;
			}
			set
			{
				this._ChuyenMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoadaotao_NganhHoc", Storage="_Khoadaotao", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoadaotao Khoadaotao
		{
			get
			{
				return this._Khoadaotao.Entity;
			}
			set
			{
				Khoadaotao previousValue = this._Khoadaotao.Entity;
				if (((previousValue != value) 
							|| (this._Khoadaotao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoadaotao.Entity = null;
						previousValue.NganhHocs.Remove(this);
					}
					this._Khoadaotao.Entity = value;
					if ((value != null))
					{
						value.NganhHocs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoadaotao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChuyenMons(ChuyenMon entity)
		{
			this.SendPropertyChanging();
			entity.NganhHoc = this;
		}
		
		private void detach_ChuyenMons(ChuyenMon entity)
		{
			this.SendPropertyChanging();
			entity.NganhHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(30)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Mssv;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _NgaySinh;
		
		private string _Lop;
		
		private string _DiaChi;
		
		private EntitySet<Dangkyhoc> _Dangkyhocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMssvChanging(string value);
    partial void OnMssvChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(string value);
    partial void OnNgaySinhChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public SinhVien()
		{
			this._Dangkyhocs = new EntitySet<Dangkyhoc>(new Action<Dangkyhoc>(this.attach_Dangkyhocs), new Action<Dangkyhoc>(this.detach_Dangkyhocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mssv", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Mssv
		{
			get
			{
				return this._Mssv;
			}
			set
			{
				if ((this._Mssv != value))
				{
					this.OnMssvChanging(value);
					this.SendPropertyChanging();
					this._Mssv = value;
					this.SendPropertyChanged("Mssv");
					this.OnMssvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(MAX)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="NChar(10)")]
		public string NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="NChar(10)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_Dangkyhoc", Storage="_Dangkyhocs", ThisKey="Mssv", OtherKey="Mssv")]
		public EntitySet<Dangkyhoc> Dangkyhocs
		{
			get
			{
				return this._Dangkyhocs;
			}
			set
			{
				this._Dangkyhocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dangkyhocs(Dangkyhoc entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_Dangkyhocs(Dangkyhoc entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemDanh")]
	public partial class DiemDanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDD;
		
		private System.Nullable<int> _MaDK;
		
		private System.Nullable<int> _Buoi;
		
		private string _NgayDD;
		
		private System.Nullable<int> _TinhTrang;
		
		private string _GhiChu;
		
		private EntityRef<Dangkyhoc> _Dangkyhoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnMaDKChanging(System.Nullable<int> value);
    partial void OnMaDKChanged();
    partial void OnBuoiChanging(System.Nullable<int> value);
    partial void OnBuoiChanged();
    partial void OnNgayDDChanging(string value);
    partial void OnNgayDDChanged();
    partial void OnTinhTrangChanging(System.Nullable<int> value);
    partial void OnTinhTrangChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public DiemDanh()
		{
			this._Dangkyhoc = default(EntityRef<Dangkyhoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDK", DbType="Int")]
		public System.Nullable<int> MaDK
		{
			get
			{
				return this._MaDK;
			}
			set
			{
				if ((this._MaDK != value))
				{
					if (this._Dangkyhoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDKChanging(value);
					this.SendPropertyChanging();
					this._MaDK = value;
					this.SendPropertyChanged("MaDK");
					this.OnMaDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Buoi", DbType="Int")]
		public System.Nullable<int> Buoi
		{
			get
			{
				return this._Buoi;
			}
			set
			{
				if ((this._Buoi != value))
				{
					this.OnBuoiChanging(value);
					this.SendPropertyChanging();
					this._Buoi = value;
					this.SendPropertyChanged("Buoi");
					this.OnBuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDD", DbType="NChar(10)")]
		public string NgayDD
		{
			get
			{
				return this._NgayDD;
			}
			set
			{
				if ((this._NgayDD != value))
				{
					this.OnNgayDDChanging(value);
					this.SendPropertyChanging();
					this._NgayDD = value;
					this.SendPropertyChanged("NgayDD");
					this.OnNgayDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="Int")]
		public System.Nullable<int> TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dangkyhoc_DiemDanh", Storage="_Dangkyhoc", ThisKey="MaDK", OtherKey="MaDK", IsForeignKey=true)]
		public Dangkyhoc Dangkyhoc
		{
			get
			{
				return this._Dangkyhoc.Entity;
			}
			set
			{
				Dangkyhoc previousValue = this._Dangkyhoc.Entity;
				if (((previousValue != value) 
							|| (this._Dangkyhoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dangkyhoc.Entity = null;
						previousValue.DiemDanhs.Remove(this);
					}
					this._Dangkyhoc.Entity = value;
					if ((value != null))
					{
						value.DiemDanhs.Add(this);
						this._MaDK = value.MaDK;
					}
					else
					{
						this._MaDK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dangkyhoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dangkyhoc")]
	public partial class Dangkyhoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDK;
		
		private string _Mssv;
		
		private string _MaMon;
		
		private string _Khoahoc;
		
		private System.Nullable<int> _Kyhoc;
		
		private EntitySet<DiemDanh> _DiemDanhs;
		
		private EntityRef<SinhVien> _SinhVien;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDKChanging(int value);
    partial void OnMaDKChanged();
    partial void OnMssvChanging(string value);
    partial void OnMssvChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnKhoahocChanging(string value);
    partial void OnKhoahocChanged();
    partial void OnKyhocChanging(System.Nullable<int> value);
    partial void OnKyhocChanged();
    #endregion
		
		public Dangkyhoc()
		{
			this._DiemDanhs = new EntitySet<DiemDanh>(new Action<DiemDanh>(this.attach_DiemDanhs), new Action<DiemDanh>(this.detach_DiemDanhs));
			this._SinhVien = default(EntityRef<SinhVien>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDK
		{
			get
			{
				return this._MaDK;
			}
			set
			{
				if ((this._MaDK != value))
				{
					this.OnMaDKChanging(value);
					this.SendPropertyChanging();
					this._MaDK = value;
					this.SendPropertyChanged("MaDK");
					this.OnMaDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mssv", DbType="NChar(20)")]
		public string Mssv
		{
			get
			{
				return this._Mssv;
			}
			set
			{
				if ((this._Mssv != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMssvChanging(value);
					this.SendPropertyChanging();
					this._Mssv = value;
					this.SendPropertyChanged("Mssv");
					this.OnMssvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NChar(10)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoahoc", DbType="NChar(30)")]
		public string Khoahoc
		{
			get
			{
				return this._Khoahoc;
			}
			set
			{
				if ((this._Khoahoc != value))
				{
					this.OnKhoahocChanging(value);
					this.SendPropertyChanging();
					this._Khoahoc = value;
					this.SendPropertyChanged("Khoahoc");
					this.OnKhoahocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kyhoc", DbType="Int")]
		public System.Nullable<int> Kyhoc
		{
			get
			{
				return this._Kyhoc;
			}
			set
			{
				if ((this._Kyhoc != value))
				{
					this.OnKyhocChanging(value);
					this.SendPropertyChanging();
					this._Kyhoc = value;
					this.SendPropertyChanged("Kyhoc");
					this.OnKyhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dangkyhoc_DiemDanh", Storage="_DiemDanhs", ThisKey="MaDK", OtherKey="MaDK")]
		public EntitySet<DiemDanh> DiemDanhs
		{
			get
			{
				return this._DiemDanhs;
			}
			set
			{
				this._DiemDanhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_Dangkyhoc", Storage="_SinhVien", ThisKey="Mssv", OtherKey="Mssv", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.Dangkyhocs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.Dangkyhocs.Add(this);
						this._Mssv = value.Mssv;
					}
					else
					{
						this._Mssv = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Dangkyhoc", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.Dangkyhocs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.Dangkyhocs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.Dangkyhoc = this;
		}
		
		private void detach_DiemDanhs(DiemDanh entity)
		{
			this.SendPropertyChanging();
			entity.Dangkyhoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private System.Nullable<int> _SoTinChi;
		
		private string _MaGV;
		
		private EntitySet<Dangkyhoc> _Dangkyhocs;
		
		private EntityRef<GiangVien> _GiangVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    partial void OnSoTinChiChanging(System.Nullable<int> value);
    partial void OnSoTinChiChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    #endregion
		
		public MonHoc()
		{
			this._Dangkyhocs = new EntitySet<Dangkyhoc>(new Action<Dangkyhoc>(this.attach_Dangkyhocs), new Action<Dangkyhoc>(this.detach_Dangkyhocs));
			this._GiangVien = default(EntityRef<GiangVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(MAX)")]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChi", DbType="Int")]
		public System.Nullable<int> SoTinChi
		{
			get
			{
				return this._SoTinChi;
			}
			set
			{
				if ((this._SoTinChi != value))
				{
					this.OnSoTinChiChanging(value);
					this.SendPropertyChanging();
					this._SoTinChi = value;
					this.SendPropertyChanged("SoTinChi");
					this.OnSoTinChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NChar(20)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_Dangkyhoc", Storage="_Dangkyhocs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<Dangkyhoc> Dangkyhocs
		{
			get
			{
				return this._Dangkyhocs;
			}
			set
			{
				this._Dangkyhocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_MonHoc", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.MonHocs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.MonHocs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dangkyhocs(Dangkyhoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_Dangkyhocs(Dangkyhoc entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private string _TrinhDo;
		
		private string _ChucVu;
		
		private string _MaCM;
		
		private EntitySet<MonHoc> _MonHocs;
		
		private EntityRef<ChuyenMon> _ChuyenMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnTrinhDoChanging(string value);
    partial void OnTrinhDoChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnMaCMChanging(string value);
    partial void OnMaCMChanged();
    #endregion
		
		public GiangVien()
		{
			this._MonHocs = new EntitySet<MonHoc>(new Action<MonHoc>(this.attach_MonHocs), new Action<MonHoc>(this.detach_MonHocs));
			this._ChuyenMon = default(EntityRef<ChuyenMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(50)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrinhDo", DbType="NVarChar(50)")]
		public string TrinhDo
		{
			get
			{
				return this._TrinhDo;
			}
			set
			{
				if ((this._TrinhDo != value))
				{
					this.OnTrinhDoChanging(value);
					this.SendPropertyChanging();
					this._TrinhDo = value;
					this.SendPropertyChanged("TrinhDo");
					this.OnTrinhDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCM", DbType="NChar(10)")]
		public string MaCM
		{
			get
			{
				return this._MaCM;
			}
			set
			{
				if ((this._MaCM != value))
				{
					if (this._ChuyenMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCMChanging(value);
					this.SendPropertyChanging();
					this._MaCM = value;
					this.SendPropertyChanged("MaCM");
					this.OnMaCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_MonHoc", Storage="_MonHocs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<MonHoc> MonHocs
		{
			get
			{
				return this._MonHocs;
			}
			set
			{
				this._MonHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuyenMon_GiangVien", Storage="_ChuyenMon", ThisKey="MaCM", OtherKey="MaCM", IsForeignKey=true)]
		public ChuyenMon ChuyenMon
		{
			get
			{
				return this._ChuyenMon.Entity;
			}
			set
			{
				ChuyenMon previousValue = this._ChuyenMon.Entity;
				if (((previousValue != value) 
							|| (this._ChuyenMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuyenMon.Entity = null;
						previousValue.GiangViens.Remove(this);
					}
					this._ChuyenMon.Entity = value;
					if ((value != null))
					{
						value.GiangViens.Add(this);
						this._MaCM = value.MaCM;
					}
					else
					{
						this._MaCM = default(string);
					}
					this.SendPropertyChanged("ChuyenMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_MonHocs(MonHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
}
#pragma warning restore 1591
